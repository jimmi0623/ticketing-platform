version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: event_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: event_db
      MYSQL_USER: ticketing_user
      MYSQL_PASSWORD: ticketing_password
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis Cache
  redis:
    image: redis:7
    container_name: event_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: event_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ticketing
      RABBITMQ_DEFAULT_PASS: ticketing_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ticketing-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: event_db
      DB_USER: ticketing_user
      DB_PASSWORD: ticketing_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://ticketing:ticketing_password@rabbitmq:5672
      JWT_SECRET: dev_jwt_secret
      STRIPE_SECRET_KEY: sk_test_placeholder
      STRIPE_WEBHOOK_SECRET: whsec_placeholder
      EMAIL_HOST: smtp.example.com
      EMAIL_PORT: 587
      EMAIL_USER: you@example.com
      EMAIL_PASS: email_password
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
      - rabbitmq

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ticketing-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
